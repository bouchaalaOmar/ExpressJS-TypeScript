{"version":3,"file":"/home/omar/TraveauNodeJS/ExpressJs+TypeScript/src/App.ts","sources":["/home/omar/TraveauNodeJS/ExpressJs+TypeScript/src/App.ts"],"names":[],"mappings":";AACA,MAAY,OAAO,WAAM,SAAS,CAAC,CAAA;AACnC,MAAY,MAAM,WAAM,QAAQ,CAAC,CAAA;AACjC,MAAY,UAAU,WAAM,aAAa,CAAC,CAAA;AAC1C,6BAAuB,qBAAqB,CAAC,CAAA;AAE7C,kDAAkD;AAClD;IAKE,oDAAoD;IACpD;QACE,IAAI,CAAC,OAAO,GAAG,OAAO,EAAE,CAAC;QACzB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAED,gCAAgC;IACxB,UAAU;QAChB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;QACpC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;IAC/D,CAAC;IAEF,2BAA2B;IACpB,MAAM;QACZ;;2BAEmB;QACnB,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;QAC9B,4BAA4B;QAC5B,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI;YAC7B,GAAG,CAAC,IAAI,CAAC;gBACP,OAAO,EAAE,cAAc;aACxB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QAC9B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,oBAAU,CAAC,CAAC;IACjD,CAAC;AAED,CAAC;AAED;kBAAe,IAAI,GAAG,EAAE,CAAC,OAAO,CAAC","sourcesContent":["import * as path from 'path';\nimport * as express from 'express';\nimport * as logger from 'morgan';\nimport * as bodyParser from 'body-parser';\nimport HeroRouter from './routes/HeroRouter';\n\n// Creates and configures an ExpressJS web server.\nclass App {\n\n  // ref to Express instance\n  public express: express.Application;\n\n  //Run configuration methods on the Express instance.\n  constructor() {\n    this.express = express();\n    this.middleware();\n    this.routes();\n  }\n\n  // Configure Express middleware.\n  private middleware(): void {\n    this.express.use(logger('dev'));\n    this.express.use(bodyParser.json());\n    this.express.use(bodyParser.urlencoded({ extended: false }));\n  }\n\n // Configure API endpoints.\nprivate routes(): void {\n  /* This is just to get up and running, and to make sure what we've got is\n   * working so far. This function will change when we start to add more\n   * API endpoints */\n  let router = express.Router();\n  // placeholder route handler\n  router.get('/', (req, res, next) => {\n    res.json({\n      message: 'Hello World!'\n    });\n  });\n  this.express.use('/', router);\n  this.express.use('/api/v1/heroes', HeroRouter);\n}\n\n}\n\nexport default new App().express;\n"]}